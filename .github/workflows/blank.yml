# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    types: [ closed ]
env:
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: au-syd
  IBM_CLOUD_RESOURCE_GROUP: default
  AC_INSTANCE_ID: ${{ secrets.IBM_CLOUD_AC_INSTANCE_ID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  updateConfig:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Verify if the file changes
      - name: Check file change
        id: fileChangeMonitor
        run: |
          echo $configurationUpdated 
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
          echo $FILES
          if echo $FILES | grep -q ".json"; then
            echo "json file changed!!"
            configurationUpdated=true
          fi
          # echo "---in the last of the first job $configurationUpdated"
          echo "::set-output name=configurationUpdated::$(echo $configurationUpdated)"

      - name: Install CLI
        id: installCLI
        run: |
          echo ${{ steps.fileChangeMonitor.outputs.configurationUpdated }}
          configurationUpdated=$(echo ${{ steps.fileChangeMonitor.outputs.configurationUpdated }})
          echo "------configurationUpdated $configurationUpdated"
          if $configurationUpdated; then
             curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
             ibmcloud --version
             ibmcloud config --check-version=false
             ibmcloud plugin install app-configuration
          else
             echo "Configuration file is not updated.  No action required"
          fi
      # App Configuration plugin to import
      - name: AppConfiguration plugin to import
        run: |
          ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g "${IBM_CLOUD_RESOURCE_GROUP}" 
          ibmcloud ac init --instance_id "${AC_INSTANCE_ID}"
          # ibmcloud ac import --file FILE [--clean CLEAN]
          ls -la
